server {
    listen 80;
    server_name malmoon.store www.malmoon.store;

    # Let's Encrypt 인증을 위한 경로
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
        try_files $uri =404;
    }

    # 나머지 HTTP 요청은 HTTPS로 리디렉션
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 80;
    server_name i13c107.p.ssafy.io;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
        try_files $uri =404;
    }

    return 301 https://www.malmoon.store$request_uri;
}

server {
    listen 443 ssl;
    server_name i13c107.p.ssafy.io;

    ssl_certificate /etc/letsencrypt/live/malmoon.store/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/malmoon.store/privkey.pem;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
        try_files $uri =404;
    }

    return 301 https://www.malmoon.store$request_uri;
}

server {
    listen 443 ssl;
    server_name malmoon.store www.malmoon.store;

    ssl_certificate /etc/letsencrypt/live/malmoon.store/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/malmoon.store/privkey.pem;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
        try_files $uri =404;
    }

    # React 프론트
    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
    }

    # Spring Boot 백엔드
    location /api/ {
        proxy_pass http://backend:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection 'upgrade';
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # LiveKit 신호(WebSocket)
    location /rtc {
        proxy_pass http://i13c107.p.ssafy.io:7880;  # <- /rtc 붙이지 않음
        proxy_http_version 1.1;

        # WebSocket 업그레이드
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # FastAPI AI 서버
#     location /ai/ {
#         proxy_pass http://ai:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#     }

    location /ai-static/ {
        alias /usr/share/nginx/ai-static/;
        try_files $uri =404;
        autoindex off;
        expires 1h;
        add_header Access-Control-Allow-Origin *;
    }

    # 에러 페이지 설정
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
